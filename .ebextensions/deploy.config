option_settings:
  - namespace: aws:autoscaling:launchconfiguration
    option_name: BlockDeviceMappings
    value: /dev/sdh=:10
  - option_name: BUNDLE_DISABLE_SHARED_GEMS
    value: "1"
  - option_name: BUNDLE_PATH
    value: "vendor/bundle"

packages:
  yum:
    git: []

files:
  "/opt/elasticbeanstalk/hooks/appdeploy/pre/03_webapp_user.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash
      sudo chown -R webapp:webapp /home/webapp
      true
  "/opt/elasticbeanstalk/hooks/appdeploy/pre/13_ebs_perm.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash
      if ! mount | grep /media/volume1 > /dev/null; then
        sudo mkfs -t ext3 /dev/sdh
        sudo mkdir /media/volume1
        sudo mount /dev/sdh /media/volume1
      fi
      sudo groupadd appdev
      sudo usermod -aG appdev ec2-user
      sudo usermod -aG appdev webapp
      sudo chown -R webapp:appdev /media/volume1
      sudo chmod -R 770 /media/volume1
      true
  "/opt/elasticbeanstalk/hooks/appdeploy/post/01_public_media.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash
      ln -s /media/volume1 /var/app/current/public/media
      ln -s /media/volume1 /var/app/current/media
      sudo chown -R webapp:appdev /var/app/current/media
      true
  "/opt/elasticbeanstalk/hooks/appdeploy/pre/02_postgres_setup.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash
      sudo yum install postgresql postgresql-server postgresql-devel postgresql-contrib postgresql-docs
      sudo service postgresql initdb
      sudo service postgresql start
      true
  "/opt/elasticbeanstalk/hooks/appdeploy/pre/11_db_create.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash
      EB_SCRIPT_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k script_dir)
      EB_APP_STAGING_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k app_staging_dir)
      EB_APP_USER=$(/opt/elasticbeanstalk/bin/get-config container -k app_user)
      EB_SUPPORT_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k support_dir)

      . $EB_SUPPORT_DIR/envvars

      . $EB_SCRIPT_DIR/use-app-ruby.sh

      cd $EB_APP_STAGING_DIR
      su -s /bin/bash -c "leader_only bundle exec rake db:create" $EB_APP_USER
      true
  "/opt/elasticbeanstalk/hooks/appdeploy/pre/08_swap_create.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash
      sudo dd if=/dev/zero of=/swapfile bs=1024 count=256k
      sudo mkswap /swapfile
      sudo swapon /swapfile
      true
  "/home/webapp/.recaptcha_key":
    mode: "000755"
    owner: ec2-user
    group: ec2-user
    authentication: S3Access
    source: https://s3.amazonaws.com/elasticbeanstalk-us-east-1-203232684667/.recaptcha_key



Resources:
    AWSEBAutoScalingGroup:
        Metadata:
            AWS::CloudFormation::Authentication:
                S3Access:
                    type: S3
                    roleName: aws-elasticbeanstalk-ec2-role
                    buckets: elasticbeanstalk-us-east-1-203232684667


