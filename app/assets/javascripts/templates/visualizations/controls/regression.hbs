<div class="vis-ctrl-subblock">
  <table>
    <tr>
      <td><label for="regr-x-axis">X Axis:</label></td>
      <td id="regr-x-axis" style="text-align:center;font-size:14px;">{{xAxis}}</td>
    </tr>
    <tr>
      <td><label for="regr-y-axis">Y Axis:</label></td>
      <td>
        <select id="regr-y-axis" class="form-control" style="text-align:center;margin-left:4px;">
          {{#each yFields}}
            <option value="{{this.id}}">{{this.name}}</option>
          {{/each}}
        </select>
      </td>
    </tr>
    <tr>
      <td><label for="regr-type">Type:</label></td>
      <td>
        <select id="regr-type" class="form-control" style="text-align:center;margin-left:4px;">
          {{#each regressions}}
            <option value="{{@index}}">{{this}}</option>
          {{/each}}
        </select>
      </td>
    </tr>
  </table>
</div>
<div class="vis-ctrl-subblock centered">
  <button id="draw-regr-btn" class="save-btn btn btn-sm btn-default"">
    Draw Best Fit Line
  </button>
  <table id="regr-table">
    <col width='55%'/>
    <col width='35%'/>
    <col width='10%'/>
    <tr id="regr-table-header">
      <td><strong>f(x)<strong></td>
      <td><strong>Type<strong></td>
    </tr>
    <tbody id="regr-table-body"></tbody>
  </table>
</div>

<!--


      # Adds a regression row to our table, with styling for enabled or disabled
      addRegressionToTable: (savedReg, enabled) ->
        # Remove object from an array
        Array::filterOutValue = (v) -> x for x in @ when x != v

        # Here have a list of regressions
        regressions = ['Linear', 'Quad', 'Cubic', 'Exp', 'Log', 'Auto']

        # Add the entry used the passed regression
        regressionRow =
          """
          <tr id ='row_#{savedReg.id}' class='regression_row'>
          <td class='regression_rowdata truncate'>#{data.fields[savedReg.yAxis].fieldName}(#{data.fields[savedReg.xAxis].fieldName})</td>
          <td class='regression_rowdata'>#{regressions[savedReg.type]}</td>
          <td id='#{savedReg.id}' class='regression_remove'><i class='fa fa-times-circle'></i></td>
          </tr>
          """

        # Added info relating to this regression
        $('#regression-table-body').append(regressionRow)

        # Add the disabled style if necessary
        if !enabled
          $('tr#row_' + savedReg.id).addClass('regression_row_disabled')

        # Display the table header
        $('tr#regression-table-header').show()

        # Make each row a link to its view
        $('tr#row_' + savedReg.id).click =>
          # Reset the state of when you saved
          @configs.xAxis = savedReg.xAxis
          globals.configs.fieldSelection = [savedReg.yAxis]
          data.groupSelection = savedReg.groups

          #@configs.xBounds = savedReg.bounds[0]
          #@configs.yBounds = savedReg.bounds[1]

          $('.xAxis_input').each (i, input) ->
            if Number(input.value) == savedReg.xAxis
              input.checked = true


        # Add a make the delete button remove the regression object
        $('td#' + savedReg.id).click =>
          # Remove regression view from the screen.
          $('td#' + savedReg.id).parent().remove()

          # Display the table header if necessary
          if $('#regression-table-body > tr').length > 0
            $('tr#regression-table-header').show()
          else $('tr#regression-table-header').hide()

          # Remove regression from the savedRegressions array.
          id = savedReg.id
          for regression in @configs.savedRegressions
            if (regression.id == id)
              @configs.savedRegressions =
                @configs.savedRegressions.filterOutValue(regression)
              break

          # Remove regression from the chart
          for series, i in @chart.series
            if (series.name.id == id)
              @chart.series[i].remove()
              break

        # Make the hovering highlight the correct regression
        $('tr#row_' + savedReg.id).mouseover =>

          # Remove regression from the chart
          id = savedReg.id
          for series, i in @chart.series
            if (series.name.id is id)
              @chart.series[i].setState('hover')
              @chart.tooltip.refresh(@chart.series[i].points[@chart.series[i].points.length - 1])
              break

        # When the mouse leaves, don't highlight anymore
        $('tr#row_' + savedReg.id).mouseout =>
          # Remove regression from the chart
          id = savedReg.id
          for series, i in @chart.series
            if (series.name.id == id)
              @chart.series[i].setState('')
              @chart.tooltip.hide()
              break
-->
